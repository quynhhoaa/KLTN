@model NTQ_Solution.Areas.Admin.Data.RegisterModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

<h2>Sửa @ViewBag.Role</h2>

@using (Html.BeginForm("Edit","User",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control form-control-user", @autofocus = "autofocus" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="password" placeholder="Password" id="password" class="masked form-control form-control-user" name="password" value="@Model.Password" />
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            <i class="fa fa-eye " id="eye"></i>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control form-control-user" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control form-control-user" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="role">
                <option value=""></option>
                <option value="0">Khách hàng</option>
                <option value="1">Nhân viên</option>
            </select>
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <a class="btn btn-primary" href="/Admin/User/Index">Quay lại</a>
            <input type="submit" value="Sửa" class="btn btn-primary" />
        </div>
    </div>
</div>
}
<script>
    function show() {
        var p = document.getElementById('password');
        p.setAttribute('type', 'text');
    }

    function hide() {
        var p = document.getElementById('password');
        p.setAttribute('type', 'password');
    }

    var pwShown = 0;

    document.getElementById("eye").addEventListener("click", function () {
        if (pwShown == 0) {
            pwShown = 1;
            document.getElementById("eye").classList.add("fa-eye-slash");
            document.getElementById("eye").classList.remove("fa-eye");
            show();
        } else {
            pwShown = 0;
            document.getElementById("eye").classList.add("fa-eye");
            document.getElementById("eye").classList.remove("fa-eye-slash");
            hide();
        }
    }, false);
</script>
